name: CI

# Declare default permissions as read only.
permissions: read-all

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  inspect-code:
    name: '[Required] Inspect code'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          cache: npm
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      # Set up GitHub Actions caching for Wireit.
      - uses: google/wireit@f3a3c79c553122e2fe5829eeac7d815326502903 # setup-github-actions-caching/v1
      - name: Check code
        run: npm run check
      - name: Lint code
        run: npm run lint
      - name: Validate licenses
        run: npm run validate-licenses
      - name: Build every package
        run: npm run build
      - name: Generate documents
        run: npm run docs
      - name: Check if autogenerated docs differ
        run: |
          diff_file=$(mktemp doc_diff_XXXXXX)
          git diff --color > $diff_file
          if [[ -s $diff_file ]]; then
            echo "Please update the documentation by running 'npm run docs'. The following was the diff"
            cat $diff_file
            rm $diff_file
            exit 1
          fi
          rm $diff_file

  check-changes:
    needs: inspect-code
    uses: ./.github/workflows/changed-packages.yml
    with:
      check-mergeable-state: true

  deploy-docs:
    needs: check-changes
    name: Deploy docs (if needed)
    if: ${{ github.event_name != 'pull_request' && contains(fromJSON(needs.check-changes.outputs.changes), 'website') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          cache: npm
          node-version: lts/*
      - name: Install dependencies
        working-directory: ./website
        run: npm ci
      - name: Build website
        working-directory: ./website
        env:
          NODE_OPTIONS: --max-old-space-size=6144
        run: npm run build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847 # v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build
          user_name: release-please[bot]
          user_email: 55107282+release-please[bot]@users.noreply.github.com
      - name: Test Algolia if Crawler is blocked
        env:
          CRAWLER_USER_ID: ${{secrets.ALGOLIA_CRAWLER_USER_ID}}
          CRAWLER_API_KEY: ${{secrets.ALGOLIA_CRAWLER_API_KEY}}
          CRAWLER_ID: ${{secrets.ALGOLIA_CRAWLER_ID}}
        run: |
          RESPONSE=$(curl -H "Content-Type: application/json" -X GET --user "$CRAWLER_USER_ID:$CRAWLER_API_KEY" \
            "https://crawler.algolia.com/api/1/crawlers/$CRAWLER_ID" | grep "\"blocked\":true" || true ); \
          if [ ! -z "$RESPONSE" ]; then echo "Please go to https://crawler.algolia.com/" && exit 1; fi
      - name: Trigger Algolia reindexing
        env:
          CRAWLER_USER_ID: ${{secrets.ALGOLIA_CRAWLER_USER_ID}}
          CRAWLER_API_KEY: ${{secrets.ALGOLIA_CRAWLER_API_KEY}}
          CRAWLER_ID: ${{secrets.ALGOLIA_CRAWLER_ID}}
        run: |
          curl -H "Content-Type: application/json" -X POST --user "$CRAWLER_USER_ID:$CRAWLER_API_KEY" \
            "https://crawler.algolia.com/api/1/crawlers/$CRAWLER_ID/reindex"

  chrome-tests:
    name: ${{ matrix.suite }} tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        suite:
          - chrome-headless
          - chrome-headful
          - chrome-new-headless
          - chrome-bidi
        exclude:
          - os: windows-latest
            suite: chrome-bidi
          - os: macos-latest
            suite: chrome-headful
    steps:
      - name: Check out repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          cache: npm
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Build packages
        run: npm run build --workspace @puppeteer-test/test
      - name: Setup cache for Chrome binary
        if: ${{ matrix.suite != 'chrome-bidi' }}
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/.cache/puppeteer/chrome
          key: ${{ runner.os }}-Chrome-${{ hashFiles('packages/puppeteer-core/src/revisions.ts') }}-${{ hashFiles('packages/puppeteer/src/node/install.ts') }}
      - name: Install Chrome
        if: ${{ matrix.suite != 'chrome-bidi' }}
        run: npm run postinstall
      - name: Setup cache for Chrome Canary binary
        if: ${{ matrix.suite == 'chrome-bidi' }}
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/.cache/puppeteer/chrome-canary
          key: ${{ runner.os }}-Chrome-Canary-${{ hashFiles('package.json') }}
      - name: Install Chrome Canary
        if: ${{ matrix.suite == 'chrome-bidi' }}
        id: browser
        run: node tools/download_chrome_bidi.mjs ~/.cache/puppeteer/chrome-canary
      - name: Tests types
        run: npm run test-types
      - name: Run all tests (for non-Linux)
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: npm run test -- --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
        env:
          PUPPETEER_EXECUTABLE_PATH: ${{ steps.browser.outputs.executablePath }}
      - name: Install linux dependencies.
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install xvfb
      - name: Run all tests (for Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: xvfb-run --auto-servernum npm run test -- --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
        env:
          PUPPETEER_EXECUTABLE_PATH: ${{ steps.browser.outputs.executablePath }}
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: always()
        with:
          name: test-results
          path: /tmp/artifacts/*.json

  chrome-tests-required:
    name: '[Required] Chrome tests'
    needs: [check-changes, chrome-tests]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - if: ${{ needs.chrome-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
        run: 'exit 1'
      - run: 'exit 0'

  firefox-tests:
    name: ${{ matrix.suite }} tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        suite:
          - firefox-bidi
          - firefox-headful
          - firefox-headless
        exclude:
          - os: macos-latest
            suite: firefox-headful
          - os: macos-latest
            suite: firefox-headless
          # Disabled due to https://bugzilla.mozilla.org/show_bug.cgi?id=1843550
          # The first time the browsers launches it crashes.
          - os: macos-latest
            suite: firefox-bidi
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          cache: npm
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Build packages
        run: npm run build --workspace @puppeteer-test/test
      - name: Setup cache for Firefox binary
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/.cache/puppeteer/firefox
          key: ${{ runner.os }}-firefox-${{ hashFiles('packages/puppeteer-core/src/revisions.ts') }}-${{ hashFiles('packages/puppeteer/src/node/install.ts') }}
      - name: Install Firefox
        env:
          PUPPETEER_PRODUCT: firefox
        run: npm run postinstall
      - name: Tests types
        run: npm run test-types
      - name: Run all tests (for non-Linux)
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: npm run test -- --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - name: Install linux dependencies.
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install xvfb
      - name: Run all tests (for Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: xvfb-run --auto-servernum npm run test -- --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: always()
        with:
          name: test-results
          path: /tmp/artifacts/*.json

  firefox-tests-required:
    name: '[Required] Firefox tests'
    needs: [check-changes, firefox-tests]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - if: ${{ needs.firefox-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
        run: 'exit 1'
      - run: 'exit 0'

  docker-tests:
    name: '[Required] Test Docker image'
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    steps:
      - name: Check out repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          cache: npm
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Build packages
        run: npm run build --workspace puppeteer
      - name: Pack packages
        run: docker/pack.sh
      - name: Build docker image
        working-directory: ./docker
        run: |
          docker build -t puppeteer-test-image .
      - name: Run smoke test
        working-directory: ./docker
        run: |
          docker run -i --init --cap-add=SYS_ADMIN --rm puppeteer-test-image node -e "`cat test/smoke-test.js`"

  unit-tests:
    name: '[Required] Unit tests'
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    steps:
      - name: Check out repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          cache: npm
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Run unit tests
        run: |
          npm run unit --w puppeteer-core -w puppeteer --if-present
